volumes:
  postgres-statusoverview:
  jenkins_home:

services:
  statusoverview-db:
    container_name: statusoverview-db
    image: postgres
    ports:
      - "3579:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pgdbPassword
      POSTGRES_DB: statusoverview_DB
    volumes:
      - postgres-statusoverview:/var/lib/postgresql/data
    networks:
      - statusoverview-net

  postgrest:
    container_name: postgrest
    image: postgrest/postgrest:latest
    depends_on:
      - statusoverview-db  # Ensuring postgrest starts after statusoverview-db
    ports:
      - "3000:3000"
    environment:
      - PGRST_DB_URI=postgres://postgres:pgdbPassword@host.docker.internal:3579/statusoverview_DB
      - PGRST_DB_SCHEMA=public
      - PGRST_DB_ANON_ROLE=postgres  # Here the user should be DIFFERENT, Currently using the root user
      - PGRST_OPENAPI_SERVER_PROXY_URI=http://host.docker.internal:3000
    networks:
      - statusoverview-net

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    ports:
      - "8081:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: [ "start-dev" ]
    networks:
      - statusoverview-net

  jenkins:
    build:
      context: .
      dockerfile: jenkins/Dockerfile
    container_name: statusoverview-jenkins
    privileged: true
    user: root
    ports:
      - "8082:8080"
      - "50000:50000"
    environment:
      - JENKINS_OPTS=--httpPort=8080
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false -Dhudson.model.DirectoryBrowserSupport.CSP= -Djenkins.model.Jenkins.crumbIssuerProxyCompatibility=true -Dhudson.security.csrf.GlobalCrumbIssuerConfiguration.DISABLE_CSRF_PROTECTION=true
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - statusoverview-net

networks:
  statusoverview-net: